// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetworkTreeWebApp.Data;

namespace NetworkTreeWebApp.Migrations
{
    [DbContext(typeof(AccountsContext))]
    [Migration("20200415114230_ChangeHierarchyToString")]
    partial class ChangeHierarchyToString
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetworkTreeWebApp.Data.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Leg")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int>("PlacementPreference")
                        .HasColumnType("int");

                    b.Property<long?>("UplinkId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("UplinkId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Leg = 0,
                            Name = "A",
                            PlacementPreference = 3
                        },
                        new
                        {
                            Id = 2L,
                            Leg = 0,
                            Name = "B",
                            ParentId = 1L,
                            PlacementPreference = 2,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Leg = 0,
                            Name = "C",
                            ParentId = 1L,
                            PlacementPreference = 3,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Leg = 0,
                            Name = "D",
                            ParentId = 2L,
                            PlacementPreference = 3,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Leg = 0,
                            Name = "H",
                            ParentId = 3L,
                            PlacementPreference = 1,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Leg = 0,
                            Name = "K",
                            ParentId = 3L,
                            PlacementPreference = 3,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Leg = 0,
                            Name = "F",
                            ParentId = 2L,
                            PlacementPreference = 2,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            Leg = 0,
                            Name = "G",
                            ParentId = 4L,
                            PlacementPreference = 3,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            Leg = 0,
                            Name = "V",
                            ParentId = 4L,
                            PlacementPreference = 3,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            Leg = 0,
                            Name = "L",
                            ParentId = 6L,
                            PlacementPreference = 3,
                            UplinkId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            Leg = 0,
                            Name = "Q",
                            ParentId = 7L,
                            PlacementPreference = 3,
                            UplinkId = 2L
                        },
                        new
                        {
                            Id = 12L,
                            Leg = 0,
                            Name = "X",
                            ParentId = 11L,
                            PlacementPreference = 1,
                            UplinkId = 2L
                        },
                        new
                        {
                            Id = 13L,
                            Leg = 0,
                            Name = "Y",
                            ParentId = 11L,
                            PlacementPreference = 2,
                            UplinkId = 2L
                        });
                });

            modelBuilder.Entity("NetworkTreeWebApp.Data.AccountHierarchy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Leg")
                        .HasColumnType("int");

                    b.Property<string>("LevelPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<int>("PlacementPreference")
                        .HasColumnType("int");

                    b.Property<long?>("UplinkId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("UplinkId");

                    b.ToTable("AccountHierarchy");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Leg = 0,
                            LevelPath = "/",
                            Name = "A",
                            PlacementPreference = 3
                        });
                });

            modelBuilder.Entity("NetworkTreeWebApp.Data.Account", b =>
                {
                    b.HasOne("NetworkTreeWebApp.Data.Account", null)
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Account_Self_ParentId");

                    b.HasOne("NetworkTreeWebApp.Data.Account", null)
                        .WithMany("Downlinks")
                        .HasForeignKey("UplinkId")
                        .HasConstraintName("FK_Account_Self_UplinkId");
                });

            modelBuilder.Entity("NetworkTreeWebApp.Data.AccountHierarchy", b =>
                {
                    b.HasOne("NetworkTreeWebApp.Data.AccountHierarchy", null)
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_AccountHierarchy_Self_ParentId");

                    b.HasOne("NetworkTreeWebApp.Data.AccountHierarchy", null)
                        .WithMany("Downlinks")
                        .HasForeignKey("UplinkId")
                        .HasConstraintName("FK_AccountHierarchy_Self_UplinkId");
                });
#pragma warning restore 612, 618
        }
    }
}
